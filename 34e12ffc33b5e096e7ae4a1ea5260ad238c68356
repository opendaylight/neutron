{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_679aedc6",
        "filename": "transcriber/src/main/java/org/opendaylight/neutron/transcriber/NeutronSFCFlowClassifierInterface.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 3675
      },
      "writtenOn": "2016-10-06T02:44:05Z",
      "side": 1,
      "message": "I think using equalsIgnoreCase function where the matching is done is more bulletproof to potential regression",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 43
      },
      "revId": "34e12ffc33b5e096e7ae4a1ea5260ad238c68356",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_edaa5bd1",
        "filename": "transcriber/src/main/java/org/opendaylight/neutron/transcriber/NeutronSFCFlowClassifierInterface.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 65
      },
      "writtenOn": "2016-10-07T00:04:08Z",
      "side": 1,
      "message": "ImmutableBiMap doesn\u0027t provide that method, because key for this is object. We can probably convert the input in the lower letters to compare it and that will make it bulletproof  as well.",
      "parentUuid": "7a6b29fe_679aedc6",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 57,
        "endChar": 43
      },
      "revId": "34e12ffc33b5e096e7ae4a1ea5260ad238c68356",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}