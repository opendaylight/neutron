{
	"id": "810e37ef-c291-5276-575c-d16b3f7ef595",
	"name": "Neutron-Northbound-SFC-Rest-and-Restconf-calls",
	"description": "",
	"order": [
		"1d511ed2-e420-e501-59b3-6107f2878387",
		"5e12f74c-5edd-dfa7-56e5-4b3c426664c5",
		"40af0970-df04-8d20-b56b-c0b7a8a23bb4",
		"b3012570-d38b-432a-2eb6-4a7731450814",
		"4deeda6e-d087-3833-8349-cc7233f1ca88",
		"96110c74-ae51-7bb3-e94c-d4c0044ccccc",
		"8676edc8-697a-aef2-b203-2f840fa648b6",
		"3d8a5b17-f6f6-c004-5686-5a38ffb3d064"
	],
	"folders": [],
	"timestamp": 1466797738971,
	"owner": "128022",
	"remoteLink": "",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "1d511ed2-e420-e501-59b3-6107f2878387",
			"headers": "Content-Type: application/json\nAccept: application/json\nAuthorization: Basic YWRtaW46YWRtaW4=\n",
			"url": " http://localhost:8181/controller/nb/v2/neutron/sfc/flowclassifiers/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "admin",
				"password": "admin",
				"saveToRequest": true
			},
			"time": 1466891330305,
			"name": "Create Flow Classifier (non-MDSAL)",
			"description": "This REST call create flow classifier using the handcrafted REST API (not through the RESTCONF yang based modles).",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"responses": [],
			"rawModeData": "{\n    \"flowclassifier\":{\n    \"id\": \"444e5957-649f-477b-9e5b-f1f75b21c03c\",\n    \"name\": \"fc1\", \n    \"ethertype\": \"IPv4\", \n    \"protocol\": \"UDP\", \n    \"source_port_range_min\": 100, \n    \"source_port_range_max\": 200, \n    \"destination_port_range_min\": 100, \n    \"destination_port_range_max\": 200, \n    \"source_ip_prefix\": \"10.0.0.0/24\", \n    \"destination_ip_prefix\": \"11.0.0.0/24\", \n    \"logical_source_port\": \"5e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"logical_destination_port\": \"6e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"l7_parameters\": [\n        {\n            \"key\":\"value\"\n        }\n     ],\n     \"tenant_id\":\"4969c491a3c74ee4af974e6d800c62de\"\n    }\n\n}"
		},
		{
			"id": "3d8a5b17-f6f6-c004-5686-5a38ffb3d064",
			"headers": "Content-Type: application/json\nAccept: application/json\nAuthorization: Basic YWRtaW46YWRtaW4=\n",
			"url": " http://localhost:8181/controller/nb/v2/neutron/sfc/portpairs/",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"data": [],
			"dataMode": "raw",
			"name": "All Port Pair Data (non-MDSAL)",
			"description": "This REST call fetch all SFC Port Pair data  using the handcrafted REST API (not through the RESTCONF yang based modles).",
			"descriptionFormat": "html",
			"time": 1466977235248,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "admin",
				"password": "admin",
				"saveToRequest": true
			},
			"rawModeData": "{\n    \"flowclassifier\":{\n    \"id\": \"444e5957-649f-477b-9e5b-f1f75b21c03c\",\n    \"name\": \"fc1\", \n    \"ethertype\": \"IPv4\", \n    \"protocol\": \"UDP\", \n    \"source_port_range_min\": 100, \n    \"source_port_range_max\": 200, \n    \"destination_port_range_min\": 100, \n    \"destination_port_range_max\": 200, \n    \"source_ip_prefix\": \"10.0.0.0/24\", \n    \"destination_ip_prefix\": \"11.0.0.0/24\", \n    \"logical_source_port\": \"5e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"logical_destination_port\": \"6e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"l7_parameters\": [\n        {\n            \"key\":\"value\"\n        }\n     ],\n     \"tenant_id\":\"4969c491a3c74ee4af974e6d800c62de\"\n    }\n\n}"
		},
		{
			"id": "40af0970-df04-8d20-b56b-c0b7a8a23bb4",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nContent-Type: application/json\nAccept: application/json\n",
			"url": "http://localhost:8181/restconf/config/neutron:neutron/sfc-flow-classifiers/sfc-flow-classifier/444e5957-649f-477b-9e5b-f1f75b21c03c",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"data": [],
			"dataMode": "params",
			"name": "Specific FlowClassifier Data from MDSAL",
			"description": "Fetch specific SFC Flow Classifier data from the MD-SAL Data Store using the MD-SAL RESTCONF URL. This restconf call can be used to verify that the SFC flow classifier created through handcrafted REST request is indeed present in the MD-SAL Data store.",
			"descriptionFormat": "html",
			"time": 1466891306497,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "4deeda6e-d087-3833-8349-cc7233f1ca88",
			"headers": "Content-Type: application/json\nAccept: application/json\nAuthorization: Basic YWRtaW46YWRtaW4=\n",
			"url": " http://localhost:8181/controller/nb/v2/neutron/sfc/portpairs/",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"data": [],
			"dataMode": "raw",
			"name": "Create Port Pair (non-MDSAL)",
			"description": "This REST call create SFC Port Pairr using the handcrafted REST API (not through the RESTCONF yang based modles).",
			"descriptionFormat": "html",
			"time": 1466977029811,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "admin",
				"password": "admin",
				"saveToRequest": true
			},
			"rawModeData": "{\n    \"portpair\":{\n    \"id\": \"444e5957-649f-477b-9e5b-f1f75b21c03c\",\n    \"name\": \"fc1\", \n    \"ingress\": \"5e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"egress\": \"6e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"service_function_parameters\": [\n        {\n            \"correlation\":\"value\"\n        }\n     ],\n     \"tenant_id\":\"4969c491a3c74ee4af974e6d800c62de\"\n    }\n\n}"
		},
		{
			"id": "5e12f74c-5edd-dfa7-56e5-4b3c426664c5",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nContent-Type: application/json\nAccept: application/json\n",
			"url": "http://localhost:8181/restconf/config/neutron:neutron/sfc-flow-classifiers/",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466891257026,
			"name": "All FlowClassifier Data from MDSAL",
			"description": "Fetch SFC Flow Classifier data from the MD-SAL Data Store using the MD-SAL RESTCONF URL. This restconf call can be used to verify that the SFC flow classifier created through handcrafted REST request is indeed present in the MD-SAL Data store.  ",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"responses": []
		},
		{
			"id": "8676edc8-697a-aef2-b203-2f840fa648b6",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nContent-Type: application/json\nAccept: application/json\n",
			"url": "http://localhost:8181/restconf/config/neutron:neutron/port-pairs/port-pair/444e5957-649f-477b-9e5b-f1f75b21c03c",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1466977199765,
			"name": "Specific Port Pair Data from MDSAL",
			"description": "Fetch specific SFC Port Pair data from the MD-SAL Data Store using the MD-SAL RESTCONF URL. This restconf call can be used to verify that the SFC Port Pair created through handcrafted REST request is indeed present in the MD-SAL Data store.",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"responses": []
		},
		{
			"id": "96110c74-ae51-7bb3-e94c-d4c0044ccccc",
			"headers": "Authorization: Basic YWRtaW46YWRtaW4=\nContent-Type: application/json\nAccept: application/json\n",
			"url": "http://localhost:8181/restconf/config/neutron:neutron/port-pairs/",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"data": [],
			"dataMode": "params",
			"name": "All PortPairs Data from MDSAL",
			"description": "Fetch SFC Port Pairs data from the MD-SAL Data Store using the MD-SAL RESTCONF URL. This restconf call can be used to verify that the SFC Port Pairs created through handcrafted REST request is indeed present in the MD-SAL Data store.  ",
			"descriptionFormat": "html",
			"time": 1466977114266,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {}
		},
		{
			"id": "b3012570-d38b-432a-2eb6-4a7731450814",
			"headers": "Content-Type: application/json\nAccept: application/json\nAuthorization: Basic YWRtaW46YWRtaW4=\n",
			"url": " http://localhost:8181/controller/nb/v2/neutron/sfc/flowclassifiers/",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "810e37ef-c291-5276-575c-d16b3f7ef595",
			"data": [],
			"dataMode": "raw",
			"name": "All Flow Classifier Data (non-MDSAL)",
			"description": "This REST call fetch all flow classifier data  using the handcrafted REST API (not through the RESTCONF yang based modles).",
			"descriptionFormat": "html",
			"time": 1466891619190,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "admin",
				"password": "admin",
				"saveToRequest": true
			},
			"rawModeData": "{\n    \"flowclassifier\":{\n    \"id\": \"444e5957-649f-477b-9e5b-f1f75b21c03c\",\n    \"name\": \"fc1\", \n    \"ethertype\": \"IPv4\", \n    \"protocol\": \"UDP\", \n    \"source_port_range_min\": 100, \n    \"source_port_range_max\": 200, \n    \"destination_port_range_min\": 100, \n    \"destination_port_range_max\": 200, \n    \"source_ip_prefix\": \"10.0.0.0/24\", \n    \"destination_ip_prefix\": \"11.0.0.0/24\", \n    \"logical_source_port\": \"5e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"logical_destination_port\": \"6e8e5957-649f-477b-9e5b-f1f75b21c03c\", \n    \"l7_parameters\": [\n        {\n            \"key\":\"value\"\n        }\n     ],\n     \"tenant_id\":\"4969c491a3c74ee4af974e6d800c62de\"\n    }\n\n}"
		}
	]
}